package com.hdfc.test;

public class RemoveMatchingEle {

	public static void main(String[] args) {
		int arr1[] = { 5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 5, 5, 4, 1, 2, 3 };
		int match = 5;
		System.out.println(ifElementFound(arr1, match));
		System.out.println(countMatchingEle(arr1, match));

	}

	private static boolean ifElementFound(int[] arr1, int match) {

		boolean flag = false;
		for (int i = 0; i < arr1.length; i++) {
			if (arr1[i] == match) {
				flag = true;
			}
		}
		return flag;
	}

	private static int countMatchingEle(int[] arr1, int match) {
		int count = 0;
		for (int i = 0; i < arr1.length; i++) {
			if (arr1[i] == match) {
				count++;
			}
		}
		return count;
	}
	
	private static int[] removeMatchingEle(int[] arr1, int match) {
		
		int i = 0;
		int count = 0;
		for (i = 0; i < arr1.length; i++) {
			if (arr1[i] == match) {
				count++;
			}
		}
		//int newArr[]  = new int[arr1.length-count];
		int newArr1[] = removeTheElement(arr1, i);
		return count;
	}
	
	 public static int[] removeTheElement(int[] arr, int index) 
	    { 
	  
	        // If the array is empty 
	        // or the index is not in array range 
	        // return the original array 
	        if (arr == null || index < 0
	            || index >= arr.length) { 
	  
	            return arr; 
	        } 
	  
	        // Create another array of size one less 
	        int[] anotherArray = new int[arr.length - 1]; 
	  
	        // Copy the elements except the index 
	        // from original array to the other array 
	        for (int i = 0, k = 0; i < arr.length; i++) { 
	  
	            // if the index is 
	            // the removal element index 
	            if (i == index) { 
	                continue; 
	            } 
	  
	            // if the index is not 
	            // the removal element index 
	            anotherArray[k++] = arr[i]; 
	        } 
	  
	        // return the resultant array 
	        return anotherArray; 
	    } 
	
}
